{"leetcode":{"easy":13,"hard":2,"medium":21,"shas":{"0020-valid-parentheses":{"0020-valid-parentheses.py":"2a3acd16e35973234526bcce776ef923247925f4","README.md":"cd6320f8cb09fba0fb72aa44268e4aa33fff7cf9","difficulty":"easy"},"README.md":{"":"e4ebd2619643ff138f96e8dd7e6f4b1d18b33b60"},"0739-daily-temperatures":{"0739-daily-temperatures.py":"9da5b400bf42fb5011fa785600c1899e8168bc1c","README.md":"5c61532b63ee9964cd9c2b43443829cfdc52dda7","difficulty":"medium"},"stats.json":{"":"8827792b7a7edba556bed5dcdadbccd896e0df32"},"0001-two-sum":{"0001-two-sum.py":"a3445ba9420ef19e9f5d471ed75265b3bc0b3f86","README.md":"295832280eacc9b202138f15adc074a9cb24c66f","difficulty":"easy"},"0128-longest-consecutive-sequence":{"0128-longest-consecutive-sequence.py":"145ac7fd47fea77cdc8c21c10c672d66a4057e39","README.md":"2bc664da69d1641ddf9702656be6640b3be53cf5","difficulty":"medium"},"0236-lowest-common-ancestor-of-a-binary-tree":{"0236-lowest-common-ancestor-of-a-binary-tree.py":"8f5cf98ad32a7a00113f86a38f25a66a6cf35915","README.md":"2e410057370d1340e00c05396cfa7ccd934457ff","difficulty":"medium"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.py":"ba89b16dfa2f681da31e1f412da98f1c1427b631","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"0200-number-of-islands":{"0200-number-of-islands.py":"76efdceaf06ec30b61e2964161f6e9c3a88582dc","README.md":"42a12c0fca41e0bf0eaafabd16b28121853b36ce","difficulty":"medium"},"1171-shortest-path-in-binary-matrix":{"1171-shortest-path-in-binary-matrix.py":"6ec1ebf103509993d2e2854c23aec45f95a3db4d","README.md":"9db8bda5a0f25465074ed5ed4b232c53707614de","difficulty":"medium"},"0871-keys-and-rooms":{"0871-keys-and-rooms.py":"d2e12c553a6c3f76f90059a1f1be3325eda4b70c","README.md":"f5774014db9acda17350020e347e44692e09eec7","difficulty":"medium"},"0070-climbing-stairs":{"0070-climbing-stairs.py":"edbcd5261507bc88c22454edfe94e7bf0933079e","README.md":"0c597685f700179382f33b96e37d1288b8252318","difficulty":"easy"},"0747-min-cost-climbing-stairs":{"0747-min-cost-climbing-stairs.py":"e6ee65d5ef57fe88ae0c2584855c6da2fa008e6c","README.md":"be0a33d8d0a7615b46a6edb8d8543d1d9dfa59af","difficulty":"easy"},"0062-unique-paths":{"0062-unique-paths.py":"dd4d00accbe105c8f42c043555779e1acb7066cb","README.md":"b676820715691b3472b9749889dbf60309e0f260","difficulty":"medium"},"0744-network-delay-time":{"0744-network-delay-time.py":"000caf0a0b4f0a3bc522c21ce746bef5bde98456","README.md":"fd89115d0b20b127a43acce717630a968579aa4c","difficulty":"medium"},"0002-add-two-numbers":{"0002-add-two-numbers.py":"c794fc29774283d2aad3ee8efe8621c879746735","README.md":"466f5e31bfeb151e70b5b325c379cf04183ebb57","difficulty":"medium"},"0024-swap-nodes-in-pairs":{"README.md":"c8e0d221ab2b0816d328896841d3caf28e95fa16"},"0328-odd-even-linked-list":{"0328-odd-even-linked-list.py":"84fcea645349d8b8454d4f6253f2bf2c3ed72164","README.md":"6e8419bdb07dd5aff28612281f8e77d099e4e75c","difficulty":"medium"},"0092-reverse-linked-list-ii":{"0092-reverse-linked-list-ii.py":"561e3300c59933645d2ba00da9d90128a50cb1fb","README.md":"ef7393e9cec8b5d4098980721b062d60e653322a","difficulty":"medium"},"0225-implement-stack-using-queues":{"0225-implement-stack-using-queues.py":"0314067345ae779fe5d2a5b6cdc49f76eeba4046","README.md":"b654d8365893c74fe70f24041bb5a9545bcd8d9e","difficulty":"easy"},"0232-implement-queue-using-stacks":{"0232-implement-queue-using-stacks.py":"fa3d9f172ab119cb075121abc8a798ac374d82a4","README.md":"d0de1ae41764baaa8af874723bd5b1dc85277d89","difficulty":"easy"},"0860-design-circular-queue":{"0860-design-circular-queue.py":"7bc5182296ff7c691ba8c575c31cbe25f4e7bad3","README.md":"c4d3ea6afdd66cc09a209d59dacd8bb7b51f35fb","difficulty":"medium"},"0782-jewels-and-stones":{"0782-jewels-and-stones.py":"69d3c5a3ed44d09ee72031b39dd425bbcdffb7af","README.md":"9ac9f866eadb7f3175ddfab8437fe0b7ab397b4c","difficulty":"easy"},"0003-longest-substring-without-repeating-characters":{"README.md":"23fe8b26580352e70c75f4236710f6846864a455"},"0347-top-k-frequent-elements":{"0347-top-k-frequent-elements.py":"eb433c9b8daff5570c495e409577ccbe66b422ba","README.md":"71a7402a28b9374c9d59408ca33b519faf6b4b5d","difficulty":"medium"},"0017-letter-combinations-of-a-phone-number":{"0017-letter-combinations-of-a-phone-number.py":"ae5cb2ee7a559ed2c5e27e67d59a76b58728478f","README.md":"dbfd9945bc024a4ba6389301ff22e352ecc91963","difficulty":"medium"},"0046-permutations":{"0046-permutations.py":"ae4a75fe36f78ac2b9735228c04e7a3de97c69ff","README.md":"2b8ea299bb1b115617c0f0c3f959614962286398","difficulty":"medium"},"0077-combinations":{"0077-combinations.py":"f879d37db8891391f65b9efe3d7f89755ec307e4","README.md":"648032d4c3700460b7f70996c74a22b3e459a958","difficulty":"medium"},"0039-combination-sum":{"0039-combination-sum.py":"80f653ef2970ad8b4fbcb274d77d578f48f77bc6","README.md":"241b5cec663c0994bf628428fcf6a8d5eddcc4f2","difficulty":"medium"},"0078-subsets":{"0078-subsets.py":"a9e0a6492a750bc95f006a282b736cc964705003","README.md":"fb4b5a7f5abfc5e90375a3cbd0ec5781838463eb","difficulty":"medium"},"0332-reconstruct-itinerary":{"0332-reconstruct-itinerary.py":"871a9377c740f3002533c49f0ac13bfa183ed54d","README.md":"1d5999c2a92afbf557e592c0eef921262280469d","difficulty":"hard"},"0803-cheapest-flights-within-k-stops":{"0803-cheapest-flights-within-k-stops.py":"09a41b86d690333f4b029a763d8ddecd524ea5e8","README.md":"908dec651dddd0a182b038ac8858a67ce653b277","difficulty":"medium"},"0543-diameter-of-binary-tree":{"0543-diameter-of-binary-tree.py":"b4841ac622fa9c9611e405048e763119db0bc76c","README.md":"5ef438e39aa6f6497073598c4bd2c8274ababac7","difficulty":"easy"},"0687-longest-univalue-path":{"0687-longest-univalue-path.py":"b86341b3dbb98107e4c4cff27f63ea966b3fd82c","README.md":"c38aa4c880fc0a10815029597323dde0992fb931","difficulty":"medium"},"0226-invert-binary-tree":{"0226-invert-binary-tree.py":"a1dff9326ff6672094189a7b31c91f302a4c8977","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0617-merge-two-binary-trees":{"0617-merge-two-binary-trees.py":"696a9d0d8b787b505d11718b611e7c75836a4f62","README.md":"a5ee7bb0ad8a9549b8a9fa75c6d5ce5de809e112","difficulty":"easy"},"0297-serialize-and-deserialize-binary-tree":{"0297-serialize-and-deserialize-binary-tree.py":"f5137bdd20c196072b7e4fe1d4efc45ef0a51571","README.md":"6e55c5546dbcaa3d4a9960d4483c0cb2c7337f10","difficulty":"hard"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.py":"21e66ca3cd4b247a84c551673c561dfd7f369009","README.md":"1496517dcf0faedc819cbdf10d07de1900d95d9c","difficulty":"easy"},"0108-convert-sorted-array-to-binary-search-tree":{"0108-convert-sorted-array-to-binary-search-tree.py":"8188dda18c3e94f21f485e17ef6128a5b35f303d","README.md":"243a2859e66a71742146af16ea68ff0ab438a502","difficulty":"easy"},"1114-binary-search-tree-to-greater-sum-tree":{"1114-binary-search-tree-to-greater-sum-tree.py":"d545f2cc1ba4b42356bddf13ac0de459730238c8","README.md":"4e8054fb20d86d51bcd02839c1511e2c5dffd5f3","difficulty":"medium"}},"solved":36}}